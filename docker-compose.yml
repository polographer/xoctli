version: '3'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 3030:3000
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: bash -c "rm -rf tmp/pids/server.pid && mkdir -p tmp/pids && bin/rails server --binding 0.0.0.0"
    environment:
      XOCTLI_DATABASE_USER: ${XOCTLI_DATABASE_USER}
      XOCTLI_DATABASE_PASSWORD: ${XOCTLI_DATABASE_PASSWORD}
      RAILS_MASTER_KEY: ${XOCTLI_RAILS_MASTER_KEY}
      # - DATABASE_URL=postgres://#{XOCTLI_DATABASE_USER}:#{XOCTLI_DATABASE_PASSWORD}@db/xoctli_production
      # Overrides default command so things don't shut down after the process ends.
      # command: sleep infinity

      # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
      # network_mode: service:db

      # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
      # (Adding the "ports" property to this file will not forward from a Codespace.)

  db:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${XOCTLI_DATABASE_USER}
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: ${XOCTLI_DATABASE_PASSWORD}
      # PUID: 1000
      # PGID: 1000

      # Your config/database.yml should use the user and password you set here,
      # and host "db" (as that's the name of this service). You can use whatever
      # database name you want. Use `bin/rails db:prepare` to create the database.
      #
      # Example:
      #
      #  development:
      #    <<: *default
      #    host: db
      #    username: postgres
      #    password: postgres
      #    database: myapp_development

      # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
      # (Adding the "ports" property to this file will not forward from a Codespace.)

volumes:
  postgres-data:
